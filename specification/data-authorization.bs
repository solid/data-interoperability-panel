Authorization Flows {#authorization}
=====================

Authorization represents several key elements that
work together to grant, adjust, and rescind access to data controlled
by a [=Social Agent=].

Key authorization flows are facilitated by an [=Authorization Agent=]
on behalf of a [=Social Agent=].

<table class="data tree" align="left">
  <col>
  <col>
  <thead>
    <tr>
      <th>Flow</th>
      <th>Scenario</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><b>Application Requests Access</b></td>
      <td>A [=Social Agent=] elects to use a new
        [=Application=]. The [=Application=] prompts the
        [=Social Agent=] for access to data in their control.
        [=Access Needs=] are provided by the [=Application=].
        </td>
    </tr>
    <tr>
      <td><b>Another Social Agent Requests Access</b></td>
      <td>A [=Social Agent=] requests access to data owned
        by another [=Social Agent=]. [=Access Needs=] are provided
        in an [=Access Request=]. Resultant notification is
        provided through an [=Access Receipt=].</td>
    </tr>
    <tr>
      <td><b>Social Agent Shares Access</b></td>
      <td>A [=Social Agent=] using an [=Application=] elects to share
        access to data in their control with another [=Social Agent=]
        that did not request it. [=Access Needs=] are provided by
        [=Application=]. Notification that access was shared is provided
        through an [=Access Receipt=].</td>
    </tr>
  </tbody>
</table>

<div class="assertion">

<b>Each authorization flow listed above uses the following pattern:</b>

1. A requesting [=Agent=] expresses
    their [[#needs|Access Needs]] to a given [=Social Agent=] for data in their control.
2. [[#needs|Access Needs]] are processed and presented to the [=Social Agent=]
    by their [=Authorization Agent=].
3.  The [=Social Agent's=] access decisions are captured and enacted
    through [[#authorizations]].
4.  The requesting [=Agent=] looks for an [=Access Grant=]
    stored in a corresponding [=Agent Registration=] in the [=Agent Registry=] of the
    data owner. This [=Access Grant=] tells them exactly what they have access to.

</div>

Slight variations concerning where [=Access Needs=] are sourced from, and
how notification of access is provided, are the only differences from
one flow to another.

## Authorization Agent ## {#authorization-agent}

An <dfn>Authorization Agent</dfn> is an [=Application=] designated by
a [=Social Agent=] to be responsible for managing the access to data
under their control, linked via their [=Registry Set=].

Any requests for access to the [=Social Agent=]
are processed by the [=Authorization Agent=].
Similarly, any decisions by the [=Social Agent=] to share data with another [=Agent=]
are processed by the [=Authorization Agent=].

<table class="classinfo data" align="left" id="classAuthorizationAgent">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Property</th>
      <th>Range</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>hasAuthorizationRedirectEndpoint</td>
      <td>IRI</td>
      <td>URI used to redirect to the Authorization Agent
      from an [=Application=] for authorization</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>[=Authorization Agent=] at https://auth.alice.example/ -
  <a href="snippets/alice.jarvis.example/alice.jarvis.example.ttl">View</a>
</figcaption>
  <pre class=include-code>
  path: snippets/alice.jarvis.example/alice.jarvis.example.ttl
  highlight: turtle
  show: 6-20
  </pre>
</figure>

### Authorization Redirect Endpoint ### {#authorization-redirect-endpoint}

An [=Application=] capable of redirecting, should redirect the user to the
Authorization Redirect Endpoint advertised by the user's [=Authorization Agent=].

The following query parameters are defined:


<table class="classinfo data" align="left">
  <colgroup></colgroup>
  <colgroup></colgroup>
  <colgroup></colgroup>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>client_id</td>
      <td>Yes</td>
      <td>URI used to identify the [=Application=]
      requesting the authorization</td>
    </tr>
    <tr>
      <td>resource</td>
      <td>No</td>
      <td>URI used to indicate the [=Data Instance=].
      Used for [[#resource-indication]]</td>
    </tr>
  </tbody>
</table>

<figure>
  <figcaption>Example redirect</figcaption>
  <pre highlight=http>
    GET /redirect?client_id=https%3A%2F%2Fprojectron.example%2F%23id HTTP/1.1
    Host: alice.jarvis.example
  </pre>
</figure>


### Resource Indication ### {#resource-indication}

When the <code>resource</code> query parameter is used, the Authorization Agent will use it
as an indication that access to a specific data instance is intended to be shared. 

### Authorization Agent Discovery ### {#authorization-agent-discovery}

The [=Authorization Agent=] for a given [=Social Agent=] can be discovered
by de-referencing the [=identity=] of that [=Social Agent=], and extracting
the object value of the <code>interop:hasAuthorizationAgent</code> statement from the
[=Social Agent=] graph in the returned [=identity profile document=].

The extracted [=Authorization Agent=] IRI <em class="rfc2119">MUST</em> be
unique to that [=Social Agent=]. In scenarios where the [=Authorization Agent=]
services multiple [=Social Agents=], this may be facilitated through
a unique sub-domain (see example below) or path.

<figure>
  <figcaption>[=Social Agent=] at https://alice.example/#id -
  <a href="snippets/alice.example/alice.example.ttl">View</a>
</figcaption>
  <pre class=include-code>
  path: snippets/alice.example/alice.example.ttl
  highlight: turtle
  show: 8-20
  line-highlight: 13
  </pre>
</figure>

Issue(171):

Issue(232):

### Agent Registration Discovery ### {#agent-registration-discovery}

An [=Agent=] that needs to discover whether a target [=Social Agent=] has
a corresponding [=Agent Registration=] for them can query the
[=Authorization Agent=] for that target [=Social Agent=].

To discover a corresponding [=Agent Regsitration=] the requesting [=Agent=]
may perform an HTTP <code>HEAD</code> or HTTP <code>GET</code> request on the IRI of the
[=Authorization Agent=] for the target [=Social Agent=].

The response will include an <code>HTTP Link</code> header relating the [=Agent Registration=]
to the [=Agent=] making the request via the
<code>http://www.w3.org/ns/solid/interop#registeredAgent</code> link relation.

<figure>
  <figcaption>HEAD request to and response from Authorization Agent</figcaption>
  <pre highlight=http>
    HEAD / HTTP/1.1
    Host: alice.jarvis.example
    Authorization: DPoP ....
  </pre>
  <pre highlight=http line-highlight=3>
    HTTP/1.1 200 OK
    Link: &lt;https://projectron.example/#app&gt;;
      anchor="https://alice.jarvis.example/bcf22534-0187-4ae4-b88f-fe0f9fa96659";
      rel="http://www.w3.org/ns/solid/interop#registeredAgent"
  </pre>
</figure>

Issue(252):
